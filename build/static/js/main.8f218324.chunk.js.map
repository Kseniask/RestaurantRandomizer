{"version":3,"sources":["Components/StartButton.js","burger.png","Components/LoadingSpinner.js","Components/Gallery.js","Components/Result.js","App.js","index.js"],"names":["StartButton","Container","className","ButtonContext","Consumer","setIsClicked","Button","variant","onClick","LoadingSpinner","src","burgerImage","alt","Gallery","id","useState","images","setImages","useEffect","getImages","a","fetch","json","imageElements","forEach","image","index","push","Col","xs","lg","Image","length","Row","Result","isLoaded","setIsLoaded","restaurant","setRestaurant","restaurantList","setRestaurantList","bannedCategories","getRestaurants","generateRandomRestaurant","undefined","console","log","navigator","geolocation","getCurrentPosition","position","coords","longitude","latitude","response","jsonResponse","list","businesses","isBanned","randomIndex","Math","floor","random","randomPlace","includes","categories","alias","name","price","count","edit","emptyIcon","fullIcon","activeColor","value","rating","size","href","url","createContext","App","isClicked","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f218324.chunk.js","sourcesContent":["import { Container, Button } from 'react-bootstrap'\nimport { ButtonContext } from '../App'\nconst StartButton = () => {\n  return (\n    <Container className='startPage'>\n      <h2>\n        Ready for lunch?\n        <br />\n        Let's try something new today!\n      </h2>\n      <ButtonContext.Consumer>\n        {setIsClicked => (\n          <Container className='startButton'>\n            <Button variant='info' onClick={() => setIsClicked(true)}>\n              Find a place\n            </Button>\n          </Container>\n        )}\n      </ButtonContext.Consumer>\n    </Container>\n  )\n}\n\nexport default StartButton\n","export default __webpack_public_path__ + \"static/media/burger.82fd45af.png\";","import burgerImage from '../burger.png'\nimport { Container } from 'react-bootstrap'\n\nconst LoadingSpinner = () => {\n  return (\n    <Container>\n      <div>\n        <img src={burgerImage} className='spinner' alt='burgerImage' />\n      </div>\n    </Container>\n  )\n}\n\nexport default LoadingSpinner\n","import { useState, useEffect } from 'react'\nimport { Image, Col, Row } from 'react-bootstrap'\n\nconst Gallery = ({ id }) => {\n  const [images, setImages] = useState([])\n\n  useEffect(() => {\n    getImages(id)\n  }, [])\n\n  const getImages = async id => {\n    const images = await (\n      await fetch(`https://whats-for-lunch-backend.herokuapp.com/images/${id}`)\n    ).json()\n    const imageElements = []\n    images.forEach((image, index) =>\n      imageElements.push(\n        <Col xs lg='3'>\n          <Image\n            src={image}\n            alt='restaurant'\n            className='imageResult'\n            key={index}\n          ></Image>\n        </Col>\n      )\n    )\n    return setImages(imageElements)\n  }\n\n  return images.length === 0 ? (\n    ''\n  ) : (\n    <Row className='justify-content-md-center'>{images}</Row>\n  )\n}\n\nexport default Gallery\n","import { useState, useEffect } from 'react'\nimport LoadingSpinner from './LoadingSpinner'\nimport { Container } from 'react-bootstrap'\nimport Gallery from './Gallery'\nimport Rating from 'react-rating-stars-component'\n\nconst Result = () => {\n  const [isLoaded, setIsLoaded] = useState(false)\n  const [restaurant, setRestaurant] = useState()\n  const [restaurantList, setRestaurantList] = useState([])\n\n  const bannedCategories = [\n    'icecream',\n    'hotdogs',\n    'cafes',\n    'fondue',\n    'fastfood',\n    'coffee',\n    'tobaccoshops',\n    'convenience',\n    'grocery'\n  ]\n\n  useEffect(() => {\n    setIsLoaded(false)\n    getRestaurants()\n  }, [])\n\n  useEffect(() => {\n    if (restaurantList.length > 0) generateRandomRestaurant()\n  }, [restaurantList])\n\n  useEffect(() => {\n    if (restaurant !== undefined) {\n      console.log(restaurant)\n      setIsLoaded(true)\n    }\n  }, [restaurant])\n\n  const getRestaurants = async () => {\n    let response\n    navigator.geolocation.getCurrentPosition(async position => {\n      response = await fetch(\n        `https://whats-for-lunch-backend.herokuapp.com/restaurants/${position.coords.longitude}/${position.coords.latitude}`\n      )\n      const jsonResponse = await response.json()\n      const list = jsonResponse.businesses\n      console.log(jsonResponse)\n      setRestaurantList(list)\n    })\n  }\n\n  const generateRandomRestaurant = async () => {\n    let randomIndex, randomPlace\n    let isBanned = true\n    while (isBanned) {\n      randomIndex = Math.floor(Math.random() * restaurantList.length)\n      randomPlace = restaurantList[randomIndex]\n      isBanned = bannedCategories.includes(randomPlace.categories[0].alias)\n    }\n    console.log(randomPlace)\n    setRestaurant(randomPlace)\n  }\n\n  return (\n    <Container>\n      {isLoaded ? (\n        <Container>\n          <h2>\n            {restaurant.name}\n            <span>&nbsp;({restaurant.price})</span>\n          </h2>\n          <Rating\n            count={5}\n            edit={false}\n            emptyIcon={<i className='far fa-star'></i>}\n            fullIcon={<i className='fa fa-star'></i>}\n            activeColor='#ffd700'\n            value={restaurant.rating}\n            size='25'\n          ></Rating>\n          <Gallery id={restaurant.id}></Gallery>\n          <h5>\n            More info <a href={restaurant.url}>HERE</a>\n          </h5>\n        </Container>\n      ) : (\n        <LoadingSpinner></LoadingSpinner>\n      )}\n    </Container>\n  )\n}\n\nexport default Result\n","import './App.css'\nimport { createContext, useState } from 'react'\nimport StartButton from './Components/StartButton'\nimport Result from './Components/Result'\nimport { Container } from 'react-bootstrap'\n// import ButtonContext from '../src/Components/ButtonContext'\n\nexport const ButtonContext = createContext()\n\nfunction App () {\n  const [isClicked, setIsClicked] = useState(false)\n\n  return (\n    <Container>\n      {isClicked ? (\n        <Result></Result>\n      ) : (\n        <ButtonContext.Provider value={setIsClicked}>\n          <StartButton></StartButton>{' '}\n        </ButtonContext.Provider>\n      )}\n    </Container>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}